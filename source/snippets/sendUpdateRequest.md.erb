> Example Request:

```shell
curl https://api.smartsheet.com/2.0/sheets/{sheetId}/updaterequests \
-H "Authorization: Bearer ACCESS_TOKEN" \
-H "Content-Type: application/json" \
-X POST \
-d '{ \
    "sendTo": [ \
        {"email": "email789@smartsheet.com"}, \
        {"email": "email0123@smartsheet.com"} \
    ], \
    "subject": "some subject", \
    "message": "some message", \
    "ccMe": (true|false), \
    "rowIds": [rowId1, rowId2], \
    "columnIds": [colId1, colId2], \
    "includeAttachments": (true|false), \
    "includeDiscussions": (true|false) \
}'
```

```csharp
// Specify recipients.
Recipient[] recipients = new Recipient[] { 
    new Recipient { Email = "email789@smartsheet.com" },
    new Recipient { Email = "email0123@smartsheet.com" }
};

// Configure email.
MultiRowEmail multiEmail = new MultiRowEmail {
    SendTo = recipients,
    Subject = "some subject",
    Message = "some message",
    CcMe = true,
    RowIds = new long[] { rowId1, rowId2 },
    ColumnIds = new long[] { colId1, colId2 },
    IncludeAttachments = true,
    IncludeDiscussions = true
};

// Send update request via email.
smartsheet.SheetResources.SendUpdateRequest(sheetId, multiEmail);
```
```java
// Specify recipients.
RecipientEmail recipientEmail = new RecipientEmail.AddRecipientEmailBuilder()
                .setEmail("email789@smartsheet.com")
                .setEmail("email0123@smartsheet.com")
                .build();

List<Recipient> recipients = new ArrayList<Recipient>();
recipients.add(recipientEmail);

// Configure email.
MultiRowEmail multiRowEmail = new MultiRowEmail.AddMultiRowEmailBuilder()
    .setSendTo(recipients)
    .setSubject("some subject")
    .setMessage("some message")
    .setCcMe(false)
    .setRowIds(Arrays.asList(rowId1, rowId2)
    .setColumnIds(Arrays.asList(columnId1, columnId2)
    .setIncludeAttachments(false)
    .setIncludeDiscussions(false)
    .build();
    
// Send update request via email.
smartsheet.sheetResources().createUpdateRequest(sheetId, multiRowEmail);
```

> Example Response:

```json
{
    "resultCode": 0,
    "result": {
        "id": 4583173393803140
    },
    "message": "SUCCESS"
}
```

`POST /sheets/{sheetId}/updaterequests`

Creates an Update Request for the specified Row(s) within the Sheet. An email notification (containing a link to the update request) will be asynchronously sent to the specified recipient(s).

     |     |
-----|-----|
<%= SCOPE %> | WRITE_SHEETS
<%= HEADERS %> | <%= HEADER_AUTH %><br/><%= HEADER_CT_JSON %>
<%= REQUEST %> | [MultiRowEmail object](#multirowemail-object)<br/><br/>The MultiRowEmail object in the request body must specify one or more of the following attributes:<ul><li><b>columnIds</b>: number[]</li><li><b>attachments</b>: true</li><li><b>discussions</b>: true</li></ul>
<%= RETURNS %> | [Result object](#result-object) containing the newly created [UpdateRequest object](#updaterequest-object).
